// Code generated by goctl. DO NOT EDIT.
package types

type GenerateDemoDeviceDataReq struct {
	DeviceNumber int   `form:"device_number"`
	StartTime    int64 `form:"start_time"`
	EndTime      int64 `form:"end_time"`
}

type GenerateDemoDeviceDataResp struct {
	Code int `json:"code"`
}

type GenerateDemoMetadataReq struct {
	DeviceNumber      int `form:"device_number"`
	DeviceParamNumber int `form:"device_param_number"`
}

type GenerateDemoMetadataResp struct {
	Code int `json:"code"`
}

type GenerateDeviceVectorDataReq struct {
	StartTime int64 `form:"start_time"`
	EndTime   int64 `form:"end_time"`
}

type GenerateDeviceVectorDataResp struct {
	Code int `json:"code"`
}

type GetMetadataRequest struct {
	SN string `form:"sn"`
}

type GetMetadataResponse struct {
	Data string `json:"data"`
	Code int    `json:"code"`
}

type GetMetricsRequest struct {
	SN        string `form:"sn"`
	StartTime int64  `form:"start_time"`
	EndTime   int64  `form:"end_time"`
}

type GetMetricsResponse struct {
	Data string `json:"data"`
	Code int    `json:"code"`
}

type GetUpdateResultReq struct {
	JobId int `form:"job_id"`
}

type GetUpdateResultResp struct {
	End                        bool  `json:"end"`
	DeviceNumber               int   `json:"device_number"`
	DeviceParamNumber          int   `json:"device_param_number"`
	Thread                     int   `json:"thread"`
	Seconds                    int   `json:"seconds"`
	SuccessDeviceCount         int   `json:"success_device_count"`
	AverageLatencyMicroseconds int64 `json:"average_latency_microseconds"`
}

type SearchBadDeviceReq struct {
	Type  int `form:"type"` // 0: search all, 1: Gradual Drift; 2. search fixed camera; 3: search random movement camera
	Limit int `form:"limit"`
}

type SearchBadDeviceResp struct {
	Code int    `json:"code"`
	Data string `json:"data"`
}

type UpdateMetadataReq struct {
	DeviceNumber      int `form:"device_number"`
	DeviceParamNumber int `form:"device_param_number"`
	Thread            int `form:"thread"`
	Seconds           int `form:"seconds"`
}

type UpdateMetadataRequest struct {
	SN     string            `form:"sn"`
	Params map[string]string `form:"params"`
}

type UpdateMetadataResp struct {
	JobId int `json:"job_id"`
}

type UpdateMetadataResponse struct {
	Code int `json:"code"`
}
